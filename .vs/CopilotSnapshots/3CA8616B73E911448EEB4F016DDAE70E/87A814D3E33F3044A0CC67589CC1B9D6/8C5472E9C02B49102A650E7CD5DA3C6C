using System.Data;
using ExcelReader.RyanW84.Models;

namespace ExcelReader.RyanW84.Abstractions.Services;

/// <summary>
/// Unified CSV service interface for reading and writing to the same file
/// </summary>
public interface ICsvService
{
    /// <summary>
    /// Reads CSV file as array of string arrays (raw data)
    /// </summary>
    Task<List<string[]>> ReadCsvAsArraysAsync(string filePath);
    
    /// <summary>
    /// Reads CSV file directly as DataTable
    /// </summary>
    Task<DataTable> ReadCsvAsDataTableAsync(string filePath, string? tableName = null);
    
    /// <summary>
    /// Reads CSV file as strongly-typed objects
    /// </summary>
    Task<List<T>> ReadCsvAsObjectsAsync<T>(string filePath);
    
    /// <summary>
    /// Updates existing CSV file with DataTable content
    /// </summary>
    Task UpdateCsvFromDataTableAsync(DataTable dataTable, string filePath);
    
    /// <summary>
    /// Reads CSV, processes it, and writes back to the same file
    /// </summary>
    Task<string> ReadAndWriteCsvAsync(string filePath, Func<DataTable, Task<DataTable>> dataProcessor);
}